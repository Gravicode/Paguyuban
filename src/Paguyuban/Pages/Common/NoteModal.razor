@inject UserProfileService UserSvc
@inject NoteService NoteSvc
@inject IJSRuntime IJS
@inject IToastService toastService
@inject AppState AppState
 <div class="modal modal-lg-fullscreen fade" id="addNoteModal" tabindex="-1" role="dialog" aria-labelledby="addNoteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-dialog-zoom">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addNoteModalLabel">Add new note</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label for="addNoteName" class="col-form-label">Note title:</label>
                            <input type="text" @bind="NewNote.Title" class="form-control" id="addNoteName" placeholder="Add note title here">
                        </div>
                        <div class="form-group">
                            <label for="addNoteDetails" class="col-form-label">Note details:</label>
                            <textarea @bind="NewNote.Message" class="form-control hide-scrollbar" id="addNoteDetails" rows="4" placeholder="Add note descriptions"></textarea>
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">Note tag:</label>
                            <select @bind="NewNote.Tag" class="custom-select font-size-sm shadow-none">
                                <option selected value="Personal">Personal</option>
                            <option value="Important">Important</option>
                            <option value="Work">Work</option>
                            <option value="Favourite">Favourite</option>
                            </select>
                        </div>

                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light border" data-dismiss="modal">Close</button>
                    <button type="button" @onclick="Save" class="btn btn-primary">Add task</button>
                </div>
            </div>
        </div>
    </div>
@code {
    [Parameter]
    public Note NewNote { get; set; } 

 

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    string UserName;

    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            UserName = user.Identity.Name;

        }

    }

    async Task Save()
    {
        NewNote.CreatedDate = DateHelper.GetLocalTimeNow();
        var res = NoteSvc.InsertData(NewNote);
        if (res)
        {
            toastService.ShowSuccess("Note added.");
            AppState.RefreshNote(UserName);
            await IJS.InvokeVoidAsync("CloseModal", "addNoteModal");
        }
        else
        {
            toastService.ShowError("Note cannot be saved.");
        }
    }
}
