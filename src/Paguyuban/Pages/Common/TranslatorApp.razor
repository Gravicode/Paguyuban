@using GoogleTranslateFreeApi;
@inject IToastService toastService
<div class="tab-pane h-100" id="translator" role="tabpanel" aria-labelledby="translator-tab">
    <div class="appnavbar-content-wrapper">
        <div class="appnavbar-scrollable-wrapper">
            <div class="appnavbar-heading sticky-top">
                <ul class="nav justify-content-between align-items-center">
                    <!-- Sidebar Title Start -->
                    <li class="text-center">
                        <h5 class="text-truncate mb-0">Translator</h5>
                    </li>
                    <!-- Sidebar Title End -->
                    <!-- Close Sidebar Start -->
                    <li class="nav-item list-inline-item">
                        <div data-appcontent-close="">
                            <!-- Default :: Inline SVG -->
                            <svg class="hw-22" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>

                            <!-- Alternate :: External File link -->
                            <!-- <img class="injectable hw-22" src="./../assets/media/heroicons/outline/x.svg" alt=""> -->

                        </div>
                    </li>
                    <!-- Close Sidebar End -->
                </ul>
            </div>

            <div class="appnavbar-body">
                <div class="appnavbar-body-title">
                    <div class="dropdown w-100">
                        <!-- Dropdown Button Start -->
                        <button class="btn btn-outline-default btn-block dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@FromLang</button>
                        <!-- Dropdown Button End -->
                        <!-- Dropdown Menu Start -->
                        <div class="dropdown-menu">
                            <a class="dropdown-item" @onclick='()=>SetLang(LangMode.From,"Auto")' href="#">Auto</a>
                            <a class="dropdown-item" @onclick='()=>SetLang(LangMode.From,"English")' href="#">English</a>
                            <a class="dropdown-item" @onclick='()=>SetLang(LangMode.From,"Hindi")' href="#">Hindi</a>
                            <a class="dropdown-item" @onclick='()=>SetLang(LangMode.From,"Irish")' href="#">Irish</a>
                            <a class="dropdown-item" @onclick='()=>SetLang(LangMode.From,"Latin")' href="#">Latin</a>
                            <a class="dropdown-item" @onclick='()=>SetLang(LangMode.From,"Russian")' href="#">Russian</a>
                            <a class="dropdown-item" @onclick='()=>SetLang(LangMode.From,"Japanese")' href="#">Japanese</a>
                        </div>
                        <!-- Dropdown Menu End -->
                    </div>

                    <img class="injetable hw-16 text-muted mx-1" src="./../assets/media/heroicons/outline/arrow-right.svg" alt="">

                    <div class="dropdown w-100">
                        <!-- Dropdown Button Start -->
                        <button class="btn btn-outline-default btn-block dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@ToLang</button>
                        <!-- Dropdown Button End -->
                        <!-- Dropdown Menu Start -->
                        <div class="dropdown-menu">
                            <a class="dropdown-item" @onclick='()=>SetLang(LangMode.To,"English")' href="#">English</a>
                            <a class="dropdown-item" @onclick='()=>SetLang(LangMode.To,"Hindi")' href="#">Hindi</a>
                            <a class="dropdown-item" @onclick='()=>SetLang(LangMode.To,"Irish")' href="#">Irish</a>
                            <a class="dropdown-item" @onclick='()=>SetLang(LangMode.To,"Latin")' href="#">Latin</a>
                            <a class="dropdown-item" @onclick='()=>SetLang(LangMode.To,"Russian")' href="#">Russian</a>
                            <a class="dropdown-item" @onclick='()=>SetLang(LangMode.To,"Japanese")' href="#">Japanese</a>
                        </div>
                        <!-- Dropdown Menu End -->
                    </div>
                </div>

                <div class="translator-container p-2">
                    <div class="form-group">
                        <textarea class="form-control" rows="6" placeholder="Write text here" name="description" @bind="TextInput"></textarea>
                    </div>

                    <div class="card">
                        <div class="card-body">
                            <p class="mb-0">@Transcription</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="appnavbar-footer">
                <div @onclick="Translate" class="btn btn-primary btn-block">Translate</div>
            </div>
        </div>
    </div>
</div>
@code {
    string FromLang="Auto",ToLang="English";
    string TextInput="Hello, how are you?";
    string Transcription;

    enum LangMode{From,To};
    async Task SetLang(LangMode mode, string LangStr)
    {
        if(mode== LangMode.From)
        {
            FromLang = LangStr;
        }
        else
        {
            ToLang = LangStr;
        }
        if (!string.IsNullOrEmpty(TextInput))
        {
            await Translate();
        }
    }

    async Task Translate()
    {
        if (string.IsNullOrEmpty(TextInput))
        {
            toastService.ShowWarning("Please input text first.");
            return;
        }
        try
        {
            var translator = new GoogleTranslator();

            Language from = FromLang == "Auto" ? Language.Auto : GoogleTranslator.GetLanguageByName(FromLang);
            Language to = GoogleTranslator.GetLanguageByName(ToLang);

            TranslationResult result = await translator.TranslateLiteAsync(TextInput, from, to);

            //The result is separated by the suggestions and the '\n' symbols
            string[] resultSeparated = result.FragmentedTranslation;

            //You can get all text using MergedTranslation property
            string resultMerged = result.MergedTranslation;

            //There is also original text transcription
            Transcription = result.TranslatedTextTranscription; // Kon'nichiwa! Ogenkidesuka?
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            toastService.ShowError($"error:{ex}");
        }

    }
}
