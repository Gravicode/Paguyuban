@page "/register"
@inject IJSRuntime IJS
@inject NavigationManager NavMgr
@inject IToastService toastService
@using Paguyuban.Tools
@inject UserProfileService svc
@layout NoAuthLayout

<div class="row no-gutters text-center align-items-center justify-content-center min-vh-100">
    <div class="col-12 col-md-6 col-lg-5 col-xl-4">
        <h1 class="font-weight-bold">Sign up</h1>
        <p class="text-dark mb-3">We are Different, We Make You Different.</p>
        <form class="mb-3">
            <div class="form-group">
                <label for="name" class="sr-only">First Name</label>
                <input type="text" @bind="DataUser.FirstName" class="form-control form-control-md" id="name" placeholder="Enter your first name">
            </div>
            <div class="form-group">
                <label for="lastname" class="sr-only">Last Name</label>
                <input type="text" @bind="DataUser.LastName" class="form-control form-control-md" id="lastname" placeholder="Enter your last name">
            </div>
            <div class="form-group">
                <label for="email" class="sr-only">Email Address</label>
                <input type="email" @bind="DataUser.Email" class="form-control form-control-md" id="email" placeholder="Enter your email">
            </div> 
            <div class="form-group">
                <label for="phone" class="sr-only">Phone</label>
                <input type="tel" @bind="DataUser.Phone" class="form-control form-control-md" id="phone" placeholder="Enter your Phone">
            </div>
            <div class="form-group">
                <label for="address" class="sr-only">Address</label>
                <input type="text" @bind="DataUser.Address" class="form-control form-control-md" id="address" placeholder="Enter your Address">
            </div>
            <div class="form-group">
                <label for="password" class="sr-only">Password</label>
                <input type="password" @bind="DataUser.Password" class="form-control form-control-md" id="password" placeholder="Enter your password">
            </div> 
            <div class="form-group">
                <label for="password2" class="sr-only">Retype Password</label>
                <input type="password" @bind="RetypePass" class="form-control form-control-md" id="password2" placeholder="Retype your password">
            </div> 
            <div class="form-group">
                <img src="@CaptchaImage" style="text-align:center;margin-bottom:5px;mr-1;mb-1">
                <button @onclick="GenerateCaptcha" class="btn btn-success mb-1">Change</button>
            </div>
            <div class="form-group">
                <label for="captcha" class="sr-only">Captcha</label>
                <input type="text" @bind="TypedCaptcha" class="form-control form-control-md" id="captcha" placeholder="Enter captcha">
            </div>
            <button class="btn btn-primary btn-lg btn-block text-uppercase font-weight-semibold" @onclick="DaftarUser" type="button">Sign up</button>
        </form>

        <p>Already have an account? <a class="font-weight-semibold" href="/sign-in">Sign in</a>.</p>
    </div>
</div>

@code {
    public string CaptchaImage { get; set; }
    public string Answer { get; set; }
    public string TypedCaptcha { get; set; }

    UserProfile DataUser = new UserProfile();
    string RetypePass;
    string KodePengurus;
    string ErrorMsg = string.Empty;
    bool RegisterSuccess = false;

    void NotAvailable()
    {
        toastService.ShowWarning("Feature is not available yet");
    }



    void GenerateCaptcha()
    {
        Random oRandom = new Random();
        int iNumber = oRandom.Next(1000, 9999);
        Answer = iNumber.ToString();
        SkiaCaptchaGenerator gen = new SkiaCaptchaGenerator();
        var temp = gen.GenerateImageAsByteArray(Answer, SkiaSharp.SKEncodedImageFormat.Jpeg);
        string base64String = Convert.ToBase64String(temp, 0, temp.Length);
        CaptchaImage = "data:image/png;base64," + base64String;
    }

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(CaptchaImage))
            GenerateCaptcha();
    }
    async Task DaftarUser()
    {
        bool isPengurus = false;
        ErrorMsg = "";

        if (string.IsNullOrEmpty(TypedCaptcha))
        {
            ErrorMsg += "Tolong isi Captcha. ";
        }
        if (Answer != TypedCaptcha)
        {
            ErrorMsg += "Captcha tidak valid. ";
        }
        if (string.IsNullOrEmpty(DataUser.Email))
        {
            ErrorMsg += "Tolong di isi email. ";

        }
        if (!Paguyuban.Tools.FormValidation.IsValidEmail(DataUser.Email))
        {
            ErrorMsg += "Format email tidak valid. ";

        }
        if (string.IsNullOrEmpty(DataUser.Password))
        {
            ErrorMsg += "Tolong di isi password. ";

        }
        if (string.IsNullOrEmpty(DataUser.Phone))
        {
            ErrorMsg += "Tolong di isi no hp. ";

        }
        if (string.IsNullOrEmpty(DataUser.FirstName))
        {
            ErrorMsg += "Tolong di isi nama depan. ";

        }
        if (string.IsNullOrEmpty(DataUser.LastName))
        {
            ErrorMsg += "Tolong di isi nama belakang. ";

        }
        if (string.IsNullOrEmpty(DataUser.Address))
        {
            ErrorMsg += "Tolong di isi alamat. ";

        }
        if (DataUser.Password != RetypePass)
        {
            ErrorMsg += "Password tidak sesuai dengan ulang password. ";

        }

        DataUser.Username = DataUser.Email;

        if (svc.IsUserExists(DataUser.Username))
        {
            ErrorMsg += "User sudah terdaftar sebelumnya, gunakan email lain. ";

        }


        if (ErrorMsg.Length > 0)
        {
            toastService.ShowWarning(ErrorMsg, "Perhatian");
            return;
        }
        var enc = new Encryption();
        DataUser.FullName = $"{DataUser.FirstName} {DataUser.LastName}";


        DataUser.Role = isPengurus ? Roles.Pengurus : Roles.User;
        DataUser.Password = enc.Encrypt(DataUser.Password);
        DataUser.CreatedDate = DateHelper.GetLocalTimeNow();
        if (svc.InsertData(DataUser))
        {
            var msg = "Anda telah terdaftar di Paguyuban, nuhun";
            await SmsService.SendSms(msg, DataUser.Phone);
            await MailService.PostmarkSendEmail("Telah Teregister di Paguyuban", msg, DataUser.Email);
            RegisterSuccess = true;
            toastService.ShowSuccess("User berhasil di daftarkan.", "Info");
            NavMgr.NavigateTo("/login");

        }
    }
}
