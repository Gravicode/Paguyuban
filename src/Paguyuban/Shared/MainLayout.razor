@inherits LayoutComponentBase
@using Blazored.Toast.Configuration
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavMgr
@inject IJSRuntime jsRuntime
@inject UserProfileService Userservice
<PageTitle>Paguyuban App</PageTitle>
@inject IJSRuntime IJS
<AuthControl></AuthControl>
<!-- Main Layout Start -->
<div class="main-layout">
    <CascadingValue Value="this">
        <!-- Navigation Start -->
        <NavMenu></NavMenu>
        <!-- Navigation End -->
        <!-- Main Content -->
        @Body


        <!-- App Add-ons Start -->
        <AppBar></AppBar>
        <!-- App Add-ons End -->

        <div class="backdrop"></div>

        <!-- All Modals Start -->
        <!-- Modal 1 :: Start a Conversation-->
        <StartConversationModal></StartConversationModal>

        <!-- Modal 2 :: Create Group -->
        <CreateGroupModal @ref="GroupModal" NewMessage="NewGroupMessage"></CreateGroupModal>

        <!-- Modal 3 :: Invite Others -->
        <InviteOtherModal></InviteOtherModal>

        <!-- Modal 4 :: Notifications -->
        <NotificationModal></NotificationModal>

        <!-- Modal 5 :: Add Note -->
        <NoteModal NewNote="NewNote"></NoteModal>

        <!-- Modal 6 :: Edit Task -->
        <EditTodoModal EditTodo="EditTodo"></EditTodoModal>

        <!-- Modal 7 :: Add Task -->
        <TodoModal NewTodo="NewTodo"></TodoModal> 
        
        <!-- Modal 7 :: Add Task -->
        <AddContactModal></AddContactModal>

        <!-- All Modals End -->
    </CascadingValue>
</div>
<!-- Main Layout End -->
<BlazoredToasts Position="ToastPosition.BottomRight"
                Timeout="10"
                SuccessClass="success-toast-override"
                SuccessIconClass="fa fa-thumbs-up"
                ErrorIconClass="fa fa-bug" />



@code {

    public CreateGroupModal GroupModal { get; set; }

    [Parameter]
    public Note NewNote { get; set; } = new();

    [Parameter]
    public Todo NewTodo { get; set; } = new();

    [Parameter]
    public Todo EditTodo { get; set; } = new();

    [Parameter]
    public bool IsTransparent { get; set; } = true;

    [Parameter]
    public Inbox NewInbox { get; set; }

    [Parameter]
    public MessageBox NewGroupMessage { get; set; } = new();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    async Task Keluar()
    {
        NavMgr.NavigateTo($"/logout", true);
        //await localStorage.SetItemAsync(AppConstants.NameKey, "");
        //NavMgr.NavigateTo($"/login");
    }

    public void SetNote(Note note)
    {
        NewNote = note;
        StateHasChanged();
    } 

    public void SetNewInbox(Inbox box)
    {
        NewInbox = box;
        StateHasChanged();
    }

    public void SetNewGroup()
    {
        NewGroupMessage = new();
        GroupModal?.Reset();
        StateHasChanged();
    }
    
    public void SetTodo(Todo todo)
    {
        NewTodo = todo;
        StateHasChanged();
    } 
    
    public void SetEditTodo(Todo todo)
    {
        EditTodo = todo;
        StateHasChanged();
    }

    UserProfile selUser;
    string Nama = "Saya";
    protected override async Task OnInitializedAsync()
    {


        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            var UserName = user.Identity.Name;
            selUser = Userservice.GetUserByEmail(UserName);
            Nama = selUser?.FullName;
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {

        if (firstRender)
        {
            IJS.InvokeVoidAsync("InitApp");
            IJS.InvokeVoidAsync("ChatScrollToEnd");
        }
    }
}